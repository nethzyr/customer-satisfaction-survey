// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id            String    @id @default(cuid())
  username      String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String
}

model Question {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  text     String
  index    Int
  isActive Boolean  @default(true)
  isInput  Boolean  @default(false)
  isSmiley Boolean  @default(false)
  answers  Answer[]
  records  Record[]
}

model Answer {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  text       String
  index      Int
  isActive   Boolean  @default(true)
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId String
  Records    Record[]

  @@index([questionId])
}

model Record {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  text       String?
  answer     Answer?  @relation(fields: [answerId], references: [id], onDelete: Cascade)
  answerId   String?
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId String
  Person     Person?  @relation(fields: [personId], references: [id], onDelete: Cascade)
  personId   String?

  @@index([answerId])
  @@index([questionId])
  @@index([personId])
}

model Person {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  records Record[]
}
